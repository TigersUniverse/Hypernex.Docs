{
    "openapi": "3.0.3",
    "info": {
        "title": "Hypernex.API Documentation",
        "version": "1"
    },
    "servers": [
        {
            "url": "https://play.hypernex.dev/api/v1",
            "description": "Version 1 API Main Server"
        }
    ],
    "paths": {
        "/isInviteCodeRequired":{
            "get":{
                "summary": "isInviteCodeRequired",
                "description": "Gets whether or not an InviteCode is required to Create an Account",
                "responses": {
                    "200": {
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object",
                                            "properties": {
                                                "inviteCodeRequired": {
                                                    "description": "Whether or not an InviteCode is required to Create an Account",
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": ["inviteCodeRequired"]
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/allowAnyGameServer":{
            "get":{
                "summary": "allowAnyGameServer",
                "description": "Gets whether or not a GameServerToken is required to host a GameServer",
                "responses": {
                    "200": {
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object",
                                            "properties": {
                                                "allowAnyGameServer": {
                                                    "description": "Whether or not a GameServerToken is required to host a GameServer",
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": ["allowAnyGameServer"]
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/getSocketInfo":{
            "get":{
                "summary": "getSocketInfo",
                "description": "Gets information (such as the address, port, and SSL) for the WebSocket",
                "responses": {
                    "200": {
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object",
                                            "properties": {
                                                "IsWSS": {
                                                    "description": "If the Socket uses SSL",
                                                    "type": "boolean"
                                                },
                                                "Port": {
                                                    "description": "The port the WebSocket is running on",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": ["IsWSS", "Port"]
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/authForBuilds":{
            "get":{
                "summary": "authForBuilds",
                "description": "Gets whether or not a Login is required to download builds",
                "responses": {
                    "200": {
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object",
                                            "properties": {
                                                "authForBuilds": {
                                                    "description": "Whether or not a Login is required to download builds",
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": ["authForBuilds"]
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/unityVersion":{
            "get":{
                "summary": "unityVersion",
                "description": "Gets the current Unity Version being used",
                "responses": {
                    "200": {
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object",
                                            "properties": {
                                                "UnityVersion": {
                                                    "description": "The current Unity Version being used",
                                                    "type": "string"
                                                }
                                            },
                                            "required": ["UnityVersion"]
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/createUser": {
            "post": {
                "summary": "createUser",
                "description": "Creates a new user",
                "requestBody": {
                    "description": "Information required to create a user",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "description": "The username to create an account. Must be only letters and numbers, and ONE underscore allowed.",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "The password to use on the new account. Must contain at least one lowercase and uppercase letter, one number, and one special character.",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "The email to use on the new account. Must be a valid email.",
                                        "type": "string"
                                    },
                                    "inviteCode": {
                                        "description": "The provided invite code. Check if required with /isInviteCodeRequired",
                                        "type": "string"
                                    }
                                },
                                "required": ["username", "password", "email"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object",
                                            "properties": {
                                                "UserData": {
                                                    "description": "The returned private UserData",
                                                    "type": "object"
                                                }
                                            },
                                            "required": ["UserData"]
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/doesUserExist": {
            "post": {
                "summary": "doesUserExist",
                "description": "Checks to see if a user exists by UserId",
                "requestBody": {
                    "description": "Information required to check if a user exists",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    }
                                },
                                "required": ["userid"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object",
                                            "properties": {
                                                "doesUserExist": {
                                                    "description": "If a user exists",
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": ["doesUserExist"]
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/getUser": {
            "post": {
                "summary": "getUser",
                "description": "Gets a user by either their username or userid. If a token is provided, then the private UserData is returned",
                "requestBody": {
                    "description": "Information required to check if a user exists",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    },
                                    "username": {
                                        "description": "The Username",
                                        "type": "string"
                                    },
                                    "tokenContent": {
                                        "description": "The token's content",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object",
                                            "properties": {
                                                "UserData":{
                                                    "description": "The returned UserData. Private if a valid token was provided",
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "summary": "login",
                "description": "Logs a user into their account by giving them an account token",
                "requestBody": {
                    "description": "The information required to login",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "app": {
                                        "description": "The app that is logging in",
                                        "type": "string"
                                    },
                                    "username": {
                                        "description": "The username of the account being logged in to",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "The password of the account",
                                        "type": "string"
                                    },
                                    "twofacode": {
                                        "description": "The 2FA code if needed",
                                        "type": "string"
                                    }
                                },
                                "required": ["username", "password"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object",
                                            "properties": {
                                                "LoginResult": {
                                                    "description": "The LoginResult. 0 - Incorrect, 1 - Missing2FA, 2 - Banned, 3 - Warned, 4 - Correct.",
                                                    "type": "integer"
                                                },
                                                "WarnStatus": {
                                                    "description": "If present, then the user has received a warning. This should be displayed.",
                                                    "type": "object"
                                                },
                                                "BanStatus": {
                                                    "description": "If present, then the user has been banned. No token will be given and the ban note should be displayed.",
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "description": "The created token to be used for authentication",
                                                    "type": "object"
                                                }
                                            },
                                            "required": ["LoginResult"]
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "summary": "logout",
                "description": "Logs a user out by invalidating a valid token.",
                "requestBody": {
                    "description": "The information required to logout",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "type": "string",
                                        "description": "The UserId"
                                    },
                                    "tokenContent": {
                                        "type": "string",
                                        "description": "The token to invalidate"
                                    }
                                },
                                "required": ["userid", "tokenContent"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object"
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/isValidToken": {
            "post": {
                "summary": "isValidToken",
                "description": "Checks to see if a token is valid from either a userid or username",
                "requestBody": {
                    "description": "Information required to check a token is valid",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    },
                                    "username": {
                                        "description": "The Username",
                                        "type": "string"
                                    },
                                    "tokenContent": {
                                        "description": "The token's content",
                                        "type": "string"
                                    }
                                },
                                "required": ["tokenContent"]
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object",
                                            "properties": {
                                                "isValidToken":{
                                                    "description": "The returned UserData. Private if a valid token was provided",
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": ["isValidToken"]
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sendVerificationEmail": {
            "post": {
                "summary": "sendVerificationEmail",
                "description": "Sends an email verification email to the target userid",
                "requestBody": {
                    "description": "Information required to check a token is valid",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    },
                                    "tokenContent": {
                                        "description": "The token's content",
                                        "type": "string"
                                    }
                                },
                                "required": ["userid", "tokenContent"]
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object"
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/verifyEmailToken": {
            "post": {
                "summary": "verifyEmailToken",
                "description": "Verifies an email token from an email verification",
                "requestBody": {
                    "description": "Information required to check a token is valid",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    },
                                    "tokenContent": {
                                        "description": "The token's content",
                                        "type": "string"
                                    },
                                    "emailToken": {
                                        "description": "The email token",
                                        "type": "string"
                                    }
                                },
                                "required": ["userid", "tokenContent", "emailToken"]
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object"
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/changeEmail": {
            "post": {
                "summary": "changeEmail",
                "description": "Changes an email whether it is verified or not",
                "requestBody": {
                    "description": "Information required to change an email",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    },
                                    "tokenContent": {
                                        "description": "The token's content",
                                        "type": "string"
                                    },
                                    "newEmail": {
                                        "description": "The new email",
                                        "type": "string"
                                    }
                                },
                                "required": ["userid", "tokenContent", "newEmail"]
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object"
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/enable2fa": {
            "post": {
                "summary": "enable2fa",
                "description": "Enables 2FA to be used on an account",
                "requestBody": {
                    "description": "Information required to enable 2FA",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    },
                                    "tokenContent": {
                                        "description": "The token's content",
                                        "type": "string"
                                    }
                                },
                                "required": ["userid", "tokenContent"]
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object",
                                            "properties": {
                                                "otpauth_url":{
                                                    "description": "The URL for the OTP",
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/verify2fa": {
            "post": {
                "summary": "verify2fa",
                "description": "Verifies if a 2FA code is correct",
                "requestBody": {
                    "description": "Information required to verify a 2FA code",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    },
                                    "tokenContent": {
                                        "description": "The token's content",
                                        "type": "string"
                                    },
                                    "code": {
                                        "description": "The 2FA code",
                                        "type": "string"
                                    }
                                },
                                "required": ["userid", "tokenContent", "code"]
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "If the 2FA code could be verified",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object"
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/remove2fa": {
            "post": {
                "summary": "remove2fa",
                "description": "Removes 2FA from an account if it is enabled",
                "requestBody": {
                    "description": "Information required to remove 2FA",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    },
                                    "tokenContent": {
                                        "description": "The token's content",
                                        "type": "string"
                                    }
                                },
                                "required": ["userid", "tokenContent"]
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object"
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/requestPasswordReset": {
            "post": {
                "summary": "requestPasswordReset",
                "description": "Sends a Password Reset to a registered email (if it's verified)",
                "requestBody": {
                    "description": "Information required to change an email",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "description": "The verified email to send a password reset to",
                                        "type": "string"
                                    }
                                },
                                "required": ["email"]
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object"
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/resetPassword": {
            "post": {
                "summary": "resetPassword",
                "description": "Changes a password from a password reset email or from a token",
                "requestBody": {
                    "description": "Information required to reset a password",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    },
                                    "tokenContent": {
                                        "description": "The token's content (if resetting from token)",
                                        "type": "string"
                                    },
                                    "passwordResetContent": {
                                        "description": "The new password reset token from an email (if resetting from email)",
                                        "type": "string"
                                    },
                                    "newPassword": {
                                        "description": "The new password to be set to",
                                        "type": "string"
                                    }
                                },
                                "required": ["userid", "newPassword"]
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object"
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/updateBio": {
            "post": {
                "summary": "updateBio",
                "description": "Updates a user's bio",
                "requestBody": {
                    "description": "Information required to update a bio",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    },
                                    "tokenContent": {
                                        "description": "The token's content",
                                        "type": "string"
                                    },
                                    "bio": {
                                        "description": "The new bio",
                                        "type": "object",
                                        "properties": {
                                            "isPrivateAccount": {
                                                "description": "If the account is private",
                                                "type": "boolean"
                                            },
                                            "Status": {
                                                "description": "A status indicator represented from 1-6",
                                                "type": "integer"
                                            },
                                            "StatusText": {
                                                "description": "The user generated status",
                                                "type": "string"
                                            },
                                            "Description": {
                                                "description": "A user's description",
                                                "type": "string"
                                            },
                                            "PfpURL": {
                                                "description": "The URL for a profile picture (restrictions configurable by server)",
                                                "type": "string"
                                            },
                                            "BannerURL": {
                                                "description": "The URL for a profile banner (restrictions configurable by server)",
                                                "type": "string"
                                            },
                                            "DisplayName": {
                                                "description": "An optional Display Name for a user",
                                                "type": "string"
                                            },
                                            "Pronouns": {
                                                "description": "Either an object to define set, or \"remove\" to remove pronouns",
                                                "type": "object",
                                                "properties": {
                                                    "nominativeId": {
                                                        "description": "The id for the nominative pronoun",
                                                        "type": "integer"
                                                    },
                                                    "accusativeId": {
                                                        "description": "The id for the accusative pronoun",
                                                        "type": "integer"
                                                    },
                                                    "reflexiveId": {
                                                        "description": "The id for the reflexive pronoun",
                                                        "type": "integer"
                                                    },
                                                    "independentId": {
                                                        "description": "The id for an independent pronoun",
                                                        "type": "integer"
                                                    },
                                                    "dependentId": {
                                                        "description": "The id for a dependent pronoun",
                                                        "type": "integer"
                                                    },
                                                    "DisplayThree": {
                                                        "description": "Whether or not to display three pronoun cases instead of two (such as He/Him/Himself)",
                                                        "type": "boolean"
                                                    },
                                                    "firstCase": {
                                                        "description": "The first case id to be shown",
                                                        "type": "integer"
                                                    },
                                                    "secondCase": {
                                                        "description": "The second case id to be shown",
                                                        "type": "integer"
                                                    },
                                                    "thirdCase": {
                                                        "description": "The third case id to be shown",
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "required": ["userid", "tokenContent"]
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object"
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/blockUser": {
            "post": {
                "summary": "blockUser",
                "description": "Blocks a user by their UserId",
                "requestBody": {
                    "description": "Information required to block a user",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    },
                                    "tokenContent": {
                                        "description": "The token's content",
                                        "type": "string"
                                    },
                                    "targetUserId": {
                                        "description": "The UserId to apply the action to",
                                        "type": "string"
                                    }
                                },
                                "required": ["userid", "tokenContent", "targetUserId"]
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object"
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/unblockUser": {
            "post": {
                "summary": "unblockUser",
                "description": "Unblocks a user by their UserId",
                "requestBody": {
                    "description": "Information required to unblock a user",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    },
                                    "tokenContent": {
                                        "description": "The token's content",
                                        "type": "string"
                                    },
                                    "targetUserId": {
                                        "description": "The UserId to apply the action to",
                                        "type": "string"
                                    }
                                },
                                "required": ["userid", "tokenContent", "targetUserId"]
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object"
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/followUser": {
            "post": {
                "summary": "followUser",
                "description": "Follows a user by their UserId",
                "requestBody": {
                    "description": "Information required to follow a user",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    },
                                    "tokenContent": {
                                        "description": "The token's content",
                                        "type": "string"
                                    },
                                    "targetUserId": {
                                        "description": "The UserId to apply the action to",
                                        "type": "string"
                                    }
                                },
                                "required": ["userid", "tokenContent", "targetUserId"]
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object"
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/unfollowUser": {
            "post": {
                "summary": "unfollowUser",
                "description": "Unfollows a user by their UserId",
                "requestBody": {
                    "description": "Information required to unfollow a user",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    },
                                    "tokenContent": {
                                        "description": "The token's content",
                                        "type": "string"
                                    },
                                    "targetUserId": {
                                        "description": "The UserId to apply the action to",
                                        "type": "string"
                                    }
                                },
                                "required": ["userid", "tokenContent", "targetUserId"]
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object"
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sendFriendRequest": {
            "post": {
                "summary": "sendFriendRequest",
                "description": "Sends a friend request to a user by their UserId",
                "requestBody": {
                    "description": "Information required to send a friend request to a user",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    },
                                    "tokenContent": {
                                        "description": "The token's content",
                                        "type": "string"
                                    },
                                    "targetUserId": {
                                        "description": "The UserId to apply the action to",
                                        "type": "string"
                                    }
                                },
                                "required": ["userid", "tokenContent", "targetUserId"]
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object"
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/acceptFriendRequest": {
            "post": {
                "summary": "acceptFriendRequest",
                "description": "Accepts a user's friend request by their UserId",
                "requestBody": {
                    "description": "Information required to accept a user's friend request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    },
                                    "tokenContent": {
                                        "description": "The token's content",
                                        "type": "string"
                                    },
                                    "targetUserId": {
                                        "description": "The UserId to apply the action to",
                                        "type": "string"
                                    }
                                },
                                "required": ["userid", "tokenContent", "targetUserId"]
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object"
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/declineFriendRequest": {
            "post": {
                "summary": "declineFriendRequest",
                "description": "Declines a user's friend request by their UserId",
                "requestBody": {
                    "description": "Information required to decline a user's friend request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    },
                                    "tokenContent": {
                                        "description": "The token's content",
                                        "type": "string"
                                    },
                                    "targetUserId": {
                                        "description": "The UserId to apply the action to",
                                        "type": "string"
                                    }
                                },
                                "required": ["userid", "tokenContent", "targetUserId"]
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object"
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/removeFriend": {
            "post": {
                "summary": "removeFriend",
                "description": "Removes a user as a friend by their UserId",
                "requestBody": {
                    "description": "Information required to remove a user as a friend",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    },
                                    "tokenContent": {
                                        "description": "The token's content",
                                        "type": "string"
                                    },
                                    "targetUserId": {
                                        "description": "The UserId to apply the action to",
                                        "type": "string"
                                    }
                                },
                                "required": ["userid", "tokenContent", "targetUserId"]
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object"
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/upload": {
            "post": {
                "summary": "upload",
                "description": "Uploads an allowed file to the server",
                "requestBody": {
                    "description": "Information required to upload a file",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    },
                                    "tokenContent": {
                                        "description": "The token's content",
                                        "type": "string"
                                    },
                                    "file": {"description": "The file being uploaded (from a form)"},
                                    "avatarMeta": {
                                        "description": "The avatarMeta if the upload is an avatar",
                                        "type": "object",
                                        "properties": {
                                            "Publicity": {
                                                "description": "The publicity of an avatar represented as an integer from 0-1",
                                                "type": "integer"
                                            },
                                            "Name": {
                                                "description": "The name of the avatar",
                                                "type": "string"
                                            },
                                            "Description": {
                                                "description": "The avatar's description",
                                                "type": "string"
                                            },
                                            "Tags": {
                                                "description": "The avatar's tags",
                                                "type": "array"
                                            },
                                            "ImageURL": {
                                                "description": "The Image URL for an avatar",
                                                "type": "string"
                                            },
                                            "BuildPlatform": {
                                                "description": "The BuildPlatform for the file being uploaded along with the avatarMeta",
                                                "type": "integer"
                                            },
                                            "Id": {
                                                "description": "The Id of an existing avatar being overwritten or added to",
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "worldMeta": {
                                        "description": "The worldMeta if the upload is a world",
                                        "type": "object",
                                        "properties": {
                                            "Publicity": {
                                                "description": "The publicity of an world represented as an integer from 0-1",
                                                "type": "integer"
                                            },
                                            "Name": {
                                                "description": "The name of the world",
                                                "type": "string"
                                            },
                                            "Description": {
                                                "description": "The world's description",
                                                "type": "string"
                                            },
                                            "Tags": {
                                                "description": "The world's tags",
                                                "type": "array"
                                            },
                                            "ThumbnailURL": {
                                                "description": "The Thumbnail URL for a world",
                                                "type": "string"
                                            },
                                            "IconURLs": {
                                                "description": "An array of Image URLs as icons for a world",
                                                "type": "array"
                                            },
                                            "ServerScripts": {
                                                "description": "An array of Script URLs as ServerScripts for a world",
                                                "type": "array"
                                            },
                                            "BuildPlatform": {
                                                "description": "The BuildPlatform for the file being uploaded along with the worldMeta",
                                                "type": "integer"
                                            },
                                            "Id": {
                                                "description": "The Id of an existing world being overwritten or added to",
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "required": ["userid", "tokenContent", "file"]
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object"
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/uploadPart": {
            "post": {
                "summary": "uploadPart",
                "description": "Uploads part of an allowed file to the server",
                "requestBody": {
                    "description": "Information required to upload part of a file",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    },
                                    "tokenContent": {
                                        "description": "The token's content",
                                        "type": "string"
                                    },
                                    "file": {"description": "The file being uploaded (from a form)"},
                                    "originalFileName": {
                                        "description": "The original file's name",
                                        "type": "string"
                                    },
                                    "chunkNumber": {
                                        "description": "The current chunk of a part to upload",
                                        "type": "integer"
                                    },
                                    "amountOfChunks": {
                                        "description": "The total amount of chunks as calculated by the client",
                                        "type": "integer"
                                    },
                                    "chunkId": {
                                        "description": "The assigned upload part id given after the first chunk is uploaded",
                                        "type": "string"
                                    },
                                    "avatarMeta": {
                                        "description": "The avatarMeta if the upload is an avatar",
                                        "type": "object",
                                        "properties": {
                                            "Publicity": {
                                                "description": "The publicity of an avatar represented as an integer from 0-1",
                                                "type": "integer"
                                            },
                                            "Name": {
                                                "description": "The name of the avatar",
                                                "type": "string"
                                            },
                                            "Description": {
                                                "description": "The avatar's description",
                                                "type": "string"
                                            },
                                            "Tags": {
                                                "description": "The avatar's tags",
                                                "type": "array"
                                            },
                                            "ImageURL": {
                                                "description": "The Image URL for an avatar",
                                                "type": "string"
                                            },
                                            "BuildPlatform": {
                                                "description": "The BuildPlatform for the file being uploaded along with the avatarMeta",
                                                "type": "integer"
                                            },
                                            "Id": {
                                                "description": "The Id of an existing avatar being overwritten or added to",
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "worldMeta": {
                                        "description": "The worldMeta if the upload is a world",
                                        "type": "object",
                                        "properties": {
                                            "Publicity": {
                                                "description": "The publicity of an world represented as an integer from 0-1",
                                                "type": "integer"
                                            },
                                            "Name": {
                                                "description": "The name of the world",
                                                "type": "string"
                                            },
                                            "Description": {
                                                "description": "The world's description",
                                                "type": "string"
                                            },
                                            "Tags": {
                                                "description": "The world's tags",
                                                "type": "array"
                                            },
                                            "ThumbnailURL": {
                                                "description": "The Thumbnail URL for a world",
                                                "type": "string"
                                            },
                                            "IconURLs": {
                                                "description": "An array of Image URLs as icons for a world",
                                                "type": "array"
                                            },
                                            "ServerScripts": {
                                                "description": "An array of Script URLs as ServerScripts for a world",
                                                "type": "array"
                                            },
                                            "BuildPlatform": {
                                                "description": "The BuildPlatform for the file being uploaded along with the worldMeta",
                                                "type": "integer"
                                            },
                                            "Id": {
                                                "description": "The Id of an existing world being overwritten or added to",
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "required": ["userid", "tokenContent", "file", "chunkNumber", "amountOfChunks"]
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object",
                                            "properties": {
                                                "chunkNumber": {
                                                    "description": "The next chunk number as calculated by the server",
                                                    "type": "integer"
                                                },
                                                "chunkId": {
                                                    "description": "The assigned chunkId",
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/remove/avatar": {
            "post": {
                "summary": "remove/avatar",
                "description": "Removes an avatar by its id",
                "requestBody": {
                    "description": "Information required to remove an avatar by its id",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    },
                                    "tokenContent": {
                                        "description": "The token's content",
                                        "type": "string"
                                    },
                                    "avatarid": {
                                        "description": "The avatar's id to remove",
                                        "type": "string"
                                    }
                                },
                                "required": ["userid", "tokenContent", "avatarid"]
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object"
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/remove/world": {
            "post": {
                "summary": "remove/world",
                "description": "Removes a world by its id",
                "requestBody": {
                    "description": "Information required to remove a world by its id",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    },
                                    "tokenContent": {
                                        "description": "The token's content",
                                        "type": "string"
                                    },
                                    "worldid": {
                                        "description": "The world's id to remove",
                                        "type": "string"
                                    }
                                },
                                "required": ["userid", "tokenContent", "worldid"]
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object"
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/remove/file": {
            "post": {
                "summary": "remove/file",
                "description": "Removes a file by its id",
                "requestBody": {
                    "description": "Information required to remove a file by its id",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    },
                                    "tokenContent": {
                                        "description": "The token's content",
                                        "type": "string"
                                    },
                                    "fileid": {
                                        "description": "The file's id to remove",
                                        "type": "string"
                                    }
                                },
                                "required": ["userid", "tokenContent", "fileid"]
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object"
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search/user/{username}/{itemsPerPage}/{page}":{
            "get":{
                "summary": "search/user/:username/:itemsPerPage/:pageNumber",
                "description": "Searches for UserIds that match or are similar to a username provided",
                "parameters": [
                    {
                        "in": "path",
                        "name": "username",
                        "description": "The username to search for",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "itemsPerPage",
                        "description": "How many results to show per page",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "page",
                        "description": "What page?",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object",
                                            "properties": {
                                                "Candidates": {
                                                    "description": "The resulting UserIds",
                                                    "type": "array"
                                                }
                                            }
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search/avatar/{name}/{itemsPerPage}/{pageNumber}":{
            "get":{
                "summary": "search/avatar/:name/:itemsPerPage/:pageNumber",
                "description": "Searches for an avatar based on its name",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "description": "The name to search for",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "itemsPerPage",
                        "description": "How many results to show per page. Limited to 50 or below",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "pageNumber",
                        "description": "The selected page number",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object",
                                            "properties": {
                                                "Candidates": {
                                                    "description": "The resulting AvatarIds",
                                                    "type": "array"
                                                }
                                            }
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tag/avatar/{tag}/{itemsPerPage}/{pageNumber}":{
            "get":{
                "summary": "tag/avatar/:name/:itemsPerPage/:pageNumber",
                "description": "Searches for an avatar based on a tag",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tag",
                        "description": "The tag to search for",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "itemsPerPage",
                        "description": "How many results to show per page. Limited to 50 or below",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "pageNumber",
                        "description": "The selected page number",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object",
                                            "properties": {
                                                "Candidates": {
                                                    "description": "The resulting AvatarIds",
                                                    "type": "array"
                                                }
                                            }
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search/world/{name}/{itemsPerPage}/{pageNumber}":{
            "get":{
                "summary": "search/world/:name/:itemsPerPage/:pageNumber",
                "description": "Searches for a world based on its name",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "description": "The name to search for",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "itemsPerPage",
                        "description": "How many results to show per page. Limited to 50 or below",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "pageNumber",
                        "description": "The selected page number",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object",
                                            "properties": {
                                                "Candidates": {
                                                    "description": "The resulting WorldIds",
                                                    "type": "array"
                                                }
                                            }
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tag/world/{tag}/{itemsPerPage}/{pageNumber}":{
            "get":{
                "summary": "tag/world/:name/:itemsPerPage/:pageNumber",
                "description": "Searches for a world based on a tag",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tag",
                        "description": "The tag to search for",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "itemsPerPage",
                        "description": "How many results to show per page. Limited to 50 or below",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "pageNumber",
                        "description": "The selected page number",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object",
                                            "properties": {
                                                "Candidates": {
                                                    "description": "The resulting WorldIds",
                                                    "type": "array"
                                                }
                                            }
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/filemeta/{userid}/{fileid}":{
            "get":{
                "summary": "filemeta/:userid/:fileid",
                "description": "Gets file metadata based on id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userid",
                        "description": "The UserId who uploaded the file",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "fileid",
                        "description": "The FileId to get metadata of",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object",
                                            "properties": {
                                                "FileMeta": {
                                                    "description": "The resulting FileMeta",
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/file/{userid}/{fileid}":{
            "get":{
                "summary": "file/:userid/:fileid",
                "description": "Downloads a file from a UserId given a FileId",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userid",
                        "description": "The UserId who uploaded the file",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "fileid",
                        "description": "The FileId to download",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object"
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/file/{userid}/{fileid}/{filetoken}":{
            "get":{
                "summary": "file/:userid/:fileid/:filetoken",
                "description": "Downloads a private file from a UserId given a FileId with a FileToken",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userid",
                        "description": "The UserId who uploaded the file",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "fileid",
                        "description": "The FileId to download",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "filetoken",
                        "description": "The provided token to download a private file",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object"
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/file/{userid}/{fileid}/{gameServerId}/{gameServerToken}":{
            "get":{
                "summary": "file/:userid/:fileid/:gameServerId/:gameServerToken",
                "description": "Downloads a file from a UserId given a FileId coming from a GameServer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userid",
                        "description": "The UserId who uploaded the file",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "fileid",
                        "description": "The FileId to download",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "gameServerId",
                        "description": "The GameServerId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "gameServerToken",
                        "description": "The GameServerId's Token",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object"
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/meta/avatar/{avatarid}":{
            "get":{
                "summary": "meta/avatar/:avatarid",
                "description": "Gets avatar meta from a provided avatarid",
                "parameters": [
                    {
                        "in": "path",
                        "name": "avatarid",
                        "description": "The AvatarId to get meta of",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object",
                                            "properties": {
                                                "Meta": {
                                                    "description": "The AvatarMeta",
                                                    "type": "object",
                                                    "properties": {
                                                        "Publicity": {
                                                            "description": "The publicity of an avatar",
                                                            "type": "integer"
                                                        },
                                                        "Name": {
                                                            "description": "The name of the avatar",
                                                            "type": "string"
                                                        },
                                                        "Description": {
                                                            "description": "The avatar's description",
                                                            "type": "string"
                                                        },
                                                        "Tags": {
                                                            "description": "The avatar's tags",
                                                            "type": "array"
                                                        },
                                                        "ImageURL": {
                                                            "description": "The Image URL for an avatar",
                                                            "type": "string"
                                                        },
                                                        "Builds": {
                                                            "description": "The builds for an avatar",
                                                            "type": "array",
                                                            "properties": {
                                                                "FileId": {
                                                                    "description": "The Id of the File",
                                                                    "type": "string"
                                                                },
                                                                "BuildPlatform": {
                                                                    "description": "The Platform the Build should run on",
                                                                    "type": "integer"
                                                                }
                                                            }
                                                        },
                                                        "Id": {
                                                            "description": "The Avatar's Id",
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/meta/world/{worldid}":{
            "get":{
                "summary": "meta/world/:worldid",
                "description": "Gets world meta from a provided worldid",
                "parameters": [
                    {
                        "in": "path",
                        "name": "worldid",
                        "description": "The WorldId to get meta of",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object",
                                            "properties": {
                                                "Meta": {
                                                    "description": "The WorldMeta",
                                                    "type": "object",
                                                    "properties": {
                                                        "Publicity": {
                                                            "description": "The publicity of an world represented as an integer from 0-1",
                                                            "type": "integer"
                                                        },
                                                        "Name": {
                                                            "description": "The name of the world",
                                                            "type": "string"
                                                        },
                                                        "Description": {
                                                            "description": "The world's description",
                                                            "type": "string"
                                                        },
                                                        "Tags": {
                                                            "description": "The world's tags",
                                                            "type": "array"
                                                        },
                                                        "ThumbnailURL": {
                                                            "description": "The Thumbnail URL for a world",
                                                            "type": "string"
                                                        },
                                                        "IconURLs": {
                                                            "description": "An array of Image URLs as icons for a world",
                                                            "type": "array"
                                                        },
                                                        "Builds": {
                                                            "description": "The builds for an avatar",
                                                            "type": "array",
                                                            "properties": {
                                                                "FileId": {
                                                                    "description": "The Id of the File",
                                                                    "type": "string"
                                                                },
                                                                "BuildPlatform": {
                                                                    "description": "The Platform the Build should run on",
                                                                    "type": "integer"
                                                                },
                                                                "ServerScripts": {
                                                                    "description": "A list of URLs for ServerScripts",
                                                                    "type": "array"
                                                                }
                                                            }
                                                        },
                                                        "Id": {
                                                            "description": "The Id of an existing world being overwritten or added to",
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manageAssetToken": {
            "post": {
                "summary": "manageAssetToken",
                "description": "Manages AssetTokens for files such as private avatars or worlds",
                "requestBody": {
                    "description": "Information required to manage an AssetToken",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    },
                                    "tokenContent": {
                                        "description": "The token's content",
                                        "type": "string"
                                    },
                                    "targetUserId": {
                                        "description": "The UserId to apply the action to",
                                        "type": "string"
                                    },
                                    "action": {
                                        "description": "Whether to add (0) a token or remove (1) a token",
                                        "type": "integer"
                                    },
                                    "assetId": {
                                        "description": "The AssetId to apply the action to (either a WorldId or AvatarId)",
                                        "type": "string"
                                    },
                                    "removeAssetToken": {
                                        "description": "If removing an AssetToken, this is the AssetToken to remove",
                                        "type": "string"
                                    }
                                },
                                "required": ["userid", "tokenContent", "action", "assetId"]
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object"
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/instances": {
            "post": {
                "summary": "instances",
                "description": "Gets a list of instances that a user can join",
                "requestBody": {
                    "description": "Information required to get instances",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userid": {
                                        "description": "The UserId",
                                        "type": "string"
                                    },
                                    "tokenContent": {
                                        "description": "The token's content",
                                        "type": "string"
                                    }
                                },
                                "required": ["userid", "tokenContent"]
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties":{
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object",
                                            "properties": {
                                                "SafeInstances": {
                                                    "description": "An array of SafeInstance meta",
                                                    "type": "array",
                                                    "properties": {
                                                        "GameServerId": {
                                                            "description": "The GameServerId the instance is running on",
                                                            "type": "string"
                                                        },
                                                        "InstanceId": {
                                                            "description": "The Id of the instance",
                                                            "type": "string"
                                                        },
                                                        "InstanceCreatorId": {
                                                            "description": "The UserId of the user who created the instance",
                                                            "type": "string"
                                                        },
                                                        "InstancePublicity": {
                                                            "description": "The publicity of the instance",
                                                            "type": "integer"
                                                        },
                                                        "InstanceProtocol": {
                                                            "description": "The networking protocol of the instance",
                                                            "type": "string"
                                                        },
                                                        "ConnectedUsers": {
                                                            "description": "An array of UserIds that are connected to an instance",
                                                            "type": "array"
                                                        },
                                                        "WorldId": {
                                                            "description": "The WorldId that the instance is hosting",
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/instances/{worldid}":{
            "get":{
                "summary": "instances/:worldid",
                "description": "Gets a list of public instances a world is hosting",
                "parameters": [
                    {
                        "in": "path",
                        "name": "worldid",
                        "description": "The WorldId to get instances of",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object",
                                            "properties": {
                                                "Meta": {
                                                    "description": "The WorldMeta",
                                                    "type": "object",
                                                    "properties": {
                                                        "SafeInstances": {
                                                            "description": "An array of SafeInstance meta",
                                                            "type": "array",
                                                            "properties": {
                                                                "GameServerId": {
                                                                    "description": "The GameServerId the instance is running on",
                                                                    "type": "string"
                                                                },
                                                                "InstanceId": {
                                                                    "description": "The Id of the instance",
                                                                    "type": "string"
                                                                },
                                                                "InstanceCreatorId": {
                                                                    "description": "The UserId of the user who created the instance",
                                                                    "type": "string"
                                                                },
                                                                "InstancePublicity": {
                                                                    "description": "The publicity of the instance",
                                                                    "type": "integer"
                                                                },
                                                                "InstanceProtocol": {
                                                                    "description": "The networking protocol of the instance",
                                                                    "type": "string"
                                                                },
                                                                "ConnectedUsers": {
                                                                    "description": "An array of UserIds that are connected to an instance",
                                                                    "type": "array"
                                                                },
                                                                "WorldId": {
                                                                    "description": "The WorldId that the instance is hosting",
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/gameServers":{
            "get":{
                "summary": "instances/:worldid",
                "description": "Gets a list of public instances a world is hosting",
                "parameters": [
                    {
                        "in": "path",
                        "name": "worldid",
                        "description": "The WorldId to get instances of",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object",
                                            "properties": {
                                                "GameServers": {
                                                    "description": "An array of GameServers that are public",
                                                    "type": "object",
                                                    "properties": {
                                                        "SafeInstances": {
                                                            "description": "An array of SafeInstance meta",
                                                            "type": "array",
                                                            "properties": {
                                                                "GameServerId": {
                                                                    "description": "The GameServerId the instance is running on",
                                                                    "type": "string"
                                                                },
                                                                "Region": {
                                                                    "description": "The Id of the instance",
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "ContinentCode": {
                                                                            "description": "The abbreviation for a continent",
                                                                            "type": "string"
                                                                        },
                                                                        "City": {
                                                                            "description": "The city the GameServer resides in",
                                                                            "type": "string"
                                                                        },
                                                                        "State": {
                                                                            "description": "The state the GameServer resides in",
                                                                            "type": "string"
                                                                        },
                                                                        "Country": {
                                                                            "description": "The country the GameServer resides in",
                                                                            "type": "string"
                                                                        },
                                                                        "Latitude": {
                                                                            "description": "The Latitude of the GameServer",
                                                                            "type": "integer"
                                                                        },
                                                                        "Longitude": {
                                                                            "description": "The Longitude of the GameServer",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "required": ["ContinentCode"]
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/popularity/world/{popularityType}/{itemsPerPage}/{page}":{
            "get":{
                "summary": "popularity/world/:popularityType/:itemsPerPage/:pageNumber",
                "description": "Gets a list of popular worlds pased on the PopularityType",
                "parameters": [
                    {
                        "in": "path",
                        "name": "popularityType",
                        "description": "The PopularityType to use. (0 - Hourly, 1 - Daily, 2 - Weekly, 3 - Monthly, 4 - Yearly)",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "itemsPerPage",
                        "description": "How many results to show per page",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "page",
                        "description": "What page?",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object",
                                            "properties": {
                                                "Popular": {
                                                    "description": "The resulting Popularities",
                                                    "type": "array",
                                                    "properties": {
                                                        "Hourly": {
                                                            "description": "The Hourly Popularity Object",
                                                            "type": "object",
                                                            "properties": {
                                                                "Usages": {
                                                                    "description": "The amount of usages",
                                                                    "type": "integer"
                                                                }
                                                            }
                                                        },
                                                        "Daily": {
                                                            "description": "The Daily Popularity Object",
                                                            "type": "object",
                                                            "properties": {
                                                                "Usages": {
                                                                    "description": "The amount of usages",
                                                                    "type": "integer"
                                                                }
                                                            }
                                                        },
                                                        "Weekly": {
                                                            "description": "The Weekly Popularity Object",
                                                            "type": "object",
                                                            "properties": {
                                                                "Usages": {
                                                                    "description": "The amount of usages",
                                                                    "type": "integer"
                                                                }
                                                            }
                                                        },
                                                        "Monthly": {
                                                            "description": "The Monthly Popularity Object",
                                                            "type": "object",
                                                            "properties": {
                                                                "Usages": {
                                                                    "description": "The amount of usages",
                                                                    "type": "integer"
                                                                }
                                                            }
                                                        },
                                                        "Yearly": {
                                                            "description": "The Yearly Popularity Object",
                                                            "type": "object",
                                                            "properties": {
                                                                "Usages": {
                                                                    "description": "The amount of usages",
                                                                    "type": "integer"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/popularity/avatar/{popularityType}/{itemsPerPage}/{page}":{
            "get":{
                "summary": "popularity/avatar/:popularityType/:itemsPerPage/:pageNumber",
                "description": "Gets a list of popular avatars pased on the PopularityType",
                "parameters": [
                    {
                        "in": "path",
                        "name": "popularityType",
                        "description": "The PopularityType to use. (0 - Hourly, 1 - Daily, 2 - Weekly, 3 - Monthly, 4 - Yearly)",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "itemsPerPage",
                        "description": "How many results to show per page",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "page",
                        "description": "What page?",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "description": "Was the operation a success",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "The message returned by the server",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "The result of the server response",
                                            "type": "object",
                                            "properties": {
                                                "Popular": {
                                                    "description": "The resulting Popularities",
                                                    "type": "array",
                                                    "properties": {
                                                        "Hourly": {
                                                            "description": "The Hourly Popularity Object",
                                                            "type": "object",
                                                            "properties": {
                                                                "Usages": {
                                                                    "description": "The amount of usages",
                                                                    "type": "integer"
                                                                }
                                                            }
                                                        },
                                                        "Daily": {
                                                            "description": "The Daily Popularity Object",
                                                            "type": "object",
                                                            "properties": {
                                                                "Usages": {
                                                                    "description": "The amount of usages",
                                                                    "type": "integer"
                                                                }
                                                            }
                                                        },
                                                        "Weekly": {
                                                            "description": "The Weekly Popularity Object",
                                                            "type": "object",
                                                            "properties": {
                                                                "Usages": {
                                                                    "description": "The amount of usages",
                                                                    "type": "integer"
                                                                }
                                                            }
                                                        },
                                                        "Monthly": {
                                                            "description": "The Monthly Popularity Object",
                                                            "type": "object",
                                                            "properties": {
                                                                "Usages": {
                                                                    "description": "The amount of usages",
                                                                    "type": "integer"
                                                                }
                                                            }
                                                        },
                                                        "Yearly": {
                                                            "description": "The Yearly Popularity Object",
                                                            "type": "object",
                                                            "properties": {
                                                                "Usages": {
                                                                    "description": "The amount of usages",
                                                                    "type": "integer"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": ["success", "message"]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/randomImage":{
            "get":{
                "summary": "randomImage",
                "description": "Gets a featured random image",
                "responses": {
                    "200": {
                        "description": "A successful request"
                    }
                }
            }
        }
    }
}