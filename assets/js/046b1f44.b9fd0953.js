"use strict";(self.webpackChunkhypernex_docs=self.webpackChunkhypernex_docs||[]).push([[3776],{3905:(t,e,l)=>{l.d(e,{Zo:()=>d,kt:()=>k});var n=l(67294);function r(t,e,l){return e in t?Object.defineProperty(t,e,{value:l,enumerable:!0,configurable:!0,writable:!0}):t[e]=l,t}function a(t,e){var l=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),l.push.apply(l,n)}return l}function i(t){for(var e=1;e<arguments.length;e++){var l=null!=arguments[e]?arguments[e]:{};e%2?a(Object(l),!0).forEach((function(e){r(t,e,l[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(l)):a(Object(l)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(l,e))}))}return t}function o(t,e){if(null==t)return{};var l,n,r=function(t,e){if(null==t)return{};var l,n,r={},a=Object.keys(t);for(n=0;n<a.length;n++)l=a[n],e.indexOf(l)>=0||(r[l]=t[l]);return r}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)l=a[n],e.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(t,l)&&(r[l]=t[l])}return r}var s=n.createContext({}),p=function(t){var e=n.useContext(s),l=e;return t&&(l="function"==typeof t?t(e):i(i({},e),t)),l},d=function(t){var e=p(t.components);return n.createElement(s.Provider,{value:e},t.children)},c="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},y=n.forwardRef((function(t,e){var l=t.components,r=t.mdxType,a=t.originalType,s=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),c=p(l),y=r,k=c["".concat(s,".").concat(y)]||c[y]||u[y]||a;return l?n.createElement(k,i(i({ref:e},d),{},{components:l})):n.createElement(k,i({ref:e},d))}));function k(t,e){var l=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var a=l.length,i=new Array(a);i[0]=y;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o[c]="string"==typeof t?t:r,i[1]=o;for(var p=2;p<a;p++)i[p]=l[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,l)}y.displayName="MDXCreateElement"},91524:(t,e,l)=>{l.r(e),l.d(e,{contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var n=l(87462),r=(l(67294),l(3905));const a={},i="upload",o={type:"api",id:"upload",unversionedId:"upload",title:"upload",description:"",slug:"/upload",frontMatter:{},api:{description:"Uploads an allowed file to the server",requestBody:{description:"Information required to upload a file",content:{"application/json":{schema:{type:"object",properties:{userid:{description:"The UserId",type:"string"},tokenContent:{description:"The token's content",type:"string"},file:{description:"The file being uploaded (from a form)"},avatarMeta:{description:"The avatarMeta if the upload is an avatar",type:"object",properties:{Publicity:{description:"The publicity of an avatar represented as an integer from 0-1",type:"integer"},Name:{description:"The name of the avatar",type:"string"},Description:{description:"The avatar's description",type:"string"},Tags:{description:"The avatar's tags",type:"array"},ImageURL:{description:"The Image URL for an avatar",type:"string"},BuildPlatform:{description:"The BuildPlatform for the file being uploaded along with the avatarMeta",type:"integer"},Id:{description:"The Id of an existing avatar being overwritten or added to",type:"string"}}},worldMeta:{description:"The worldMeta if the upload is a world",type:"object",properties:{Publicity:{description:"The publicity of an world represented as an integer from 0-1",type:"integer"},Name:{description:"The name of the world",type:"string"},Description:{description:"The world's description",type:"string"},Tags:{description:"The world's tags",type:"array"},ThumbnailURL:{description:"The Thumbnail URL for a world",type:"string"},IconURLs:{description:"An array of Image URLs as icons for a world",type:"array"},ServerScripts:{description:"An array of Script URLs as ServerScripts for a world",type:"array"},BuildPlatform:{description:"The BuildPlatform for the file being uploaded along with the worldMeta",type:"integer"},Id:{description:"The Id of an existing world being overwritten or added to",type:"string"}}}},required:["userid","tokenContent","file"]}}}},responses:{200:{description:"A successful request",content:{"application/json":{schema:{type:"object",properties:{success:{description:"Was the operation a success",type:"boolean"},message:{description:"The message returned by the server",type:"string"},result:{description:"The result of the server response",type:"object"}},required:["success","message"]}}}}},method:"post",path:"/upload",parameters:[],servers:[{url:"https://play.hypernex.dev/api/v1",description:"Version 1 API Main Server"}],jsonRequestBodyExample:{userid:"string",tokenContent:"string",avatarMeta:{Publicity:0,Name:"string",Description:"string",Tags:[null],ImageURL:"string",BuildPlatform:0,Id:"string"},worldMeta:{Publicity:0,Name:"string",Description:"string",Tags:[null],ThumbnailURL:"string",IconURLs:[null],ServerScripts:[null],BuildPlatform:0,Id:"string"}},info:{title:"Hypernex.API Documentation",version:"1"},postman:{name:"upload",description:{content:"Uploads an allowed file to the server",type:"text/plain"},url:{path:["upload"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'{\n    "userid": "<string>",\n    "tokenContent": "<string>",\n    "file": "schema type not provided",\n    "avatarMeta": {\n        "Publicity": "<integer>",\n        "Name": "<string>",\n        "Description": "<string>",\n        "Tags": "<array>",\n        "ImageURL": "<string>",\n        "BuildPlatform": "<integer>",\n        "Id": "<string>"\n    },\n    "worldMeta": {\n        "Publicity": "<integer>",\n        "Name": "<string>",\n        "Description": "<string>",\n        "Tags": "<array>",\n        "ThumbnailURL": "<string>",\n        "IconURLs": "<array>",\n        "ServerScripts": "<array>",\n        "BuildPlatform": "<integer>",\n        "Id": "<string>"\n    }\n}'}}},source:"@site/openapi-docs.json",sourceDirName:".",permalink:"/docs/cloud-api/upload",previous:{title:"removeFriend",permalink:"/docs/cloud-api/remove-friend"},next:{title:"uploadPart",permalink:"/docs/cloud-api/upload-part"}},s=[],p={toc:s},d="wrapper";function c(t){let{components:e,...l}=t;return(0,r.kt)(d,(0,n.Z)({},p,l,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"upload"},"upload"),(0,r.kt)("p",null,"Uploads an allowed file to the server"),(0,r.kt)("table",{style:{display:"table",width:"100%"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Request Body ",(0,r.kt)("div",null,(0,r.kt)("p",null,"Information required to upload a file"))))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"userid"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The UserId")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"tokenContent"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The token's content")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"file"),(0,r.kt)("span",{style:{opacity:"0.6"}}," "),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The file being uploaded (from a form)")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"avatarMeta"),(0,r.kt)("span",{style:{opacity:"0.6"}}," object"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The avatarMeta if the upload is an avatar")),(0,r.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"Publicity"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The publicity of an avatar represented as an integer from 0-1")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"Name"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The name of the avatar")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"Description"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The avatar's description")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"Tags"),(0,r.kt)("span",{style:{opacity:"0.6"}}," array"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The avatar's tags")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"ImageURL"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The Image URL for an avatar")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"BuildPlatform"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The BuildPlatform for the file being uploaded along with the avatarMeta")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"Id"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The Id of an existing avatar being overwritten or added to")))))))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"worldMeta"),(0,r.kt)("span",{style:{opacity:"0.6"}}," object"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The worldMeta if the upload is a world")),(0,r.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"Publicity"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The publicity of an world represented as an integer from 0-1")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"Name"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The name of the world")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"Description"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The world's description")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"Tags"),(0,r.kt)("span",{style:{opacity:"0.6"}}," array"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The world's tags")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"ThumbnailURL"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The Thumbnail URL for a world")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"IconURLs"),(0,r.kt)("span",{style:{opacity:"0.6"}}," array"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"An array of Image URLs as icons for a world")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"ServerScripts"),(0,r.kt)("span",{style:{opacity:"0.6"}}," array"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"An array of Script URLs as ServerScripts for a world")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"BuildPlatform"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The BuildPlatform for the file being uploaded along with the worldMeta")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"Id"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The Id of an existing world being overwritten or added to")))))))))),(0,r.kt)("table",{style:{display:"table",width:"100%"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Responses"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("div",{style:{display:"flex"}},(0,r.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,r.kt)("code",null,"200")),(0,r.kt)("div",null,(0,r.kt)("p",null,"A successful request"))),(0,r.kt)("div",null,(0,r.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Schema ",(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"}}," OPTIONAL"),(0,r.kt)("div",null)))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"success"),(0,r.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"Was the operation a success")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"message"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The message returned by the server")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"result"),(0,r.kt)("span",{style:{opacity:"0.6"}}," object"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"}}," OPTIONAL"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The result of the server response"))))))))))))}c.isMDXComponent=!0}}]);