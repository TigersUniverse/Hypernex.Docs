"use strict";(self.webpackChunkhypernex_docs=self.webpackChunkhypernex_docs||[]).push([[8888],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>y});var o=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=o.createContext({}),p=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return o.createElement(s.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(t),u=a,y=m["".concat(s,".").concat(u)]||m[u]||d[u]||r;return t?o.createElement(y,i(i({ref:n},c),{},{components:t})):o.createElement(y,i({ref:n},c))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[m]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<r;p++)i[p]=t[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},92141:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var o=t(87462),a=(t(67294),t(3905));const r={},i="1.4.0",l={unversionedId:"changelogs/Hypernex.CCK/140",id:"changelogs/Hypernex.CCK/140",title:"1.4.0",description:"Added Component Security, allowing blacklisted components to be denied from loading. Also added some VideoPlayer improvements.",source:"@site/docs/changelogs/Hypernex.CCK/140.md",sourceDirName:"changelogs/Hypernex.CCK",slug:"/changelogs/Hypernex.CCK/140",permalink:"/docs/changelogs/Hypernex.CCK/140",draft:!1,editUrl:"https://github.com/TigersUniverse/Hypernex.Docs/docs/changelogs/Hypernex.CCK/140.md",tags:[],version:"current",frontMatter:{},sidebar:"changelogSidebar",previous:{title:"1.3.0",permalink:"/docs/changelogs/Hypernex.CCK/130"},next:{title:"1.2.0",permalink:"/docs/changelogs/Hypernex.Networking/120"}},s={},p=[{value:"Changes",id:"changes",level:2},{value:"API Changes",id:"api-changes",level:2},{value:"Component Security",id:"component-security",level:3}],c={toc:p},m="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(m,(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"140"},"1.4.0"),(0,a.kt)("p",null,"Added Component Security, allowing blacklisted components to be denied from loading. Also added some VideoPlayer improvements."),(0,a.kt)("h2",{id:"changes"},"Changes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Added Component Security",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"This prevents blacklisted components from being loaded on an Avatar or World"),(0,a.kt)("li",{parentName:"ul"},"The builder will now deny a user from uploading an Avatar or World that has blacklisted components.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"The user will be forced to remove the component before being allowed to upload again"))))),(0,a.kt)("li",{parentName:"ul"},"Added ",(0,a.kt)("inlineCode",{parentName:"li"},"VideoPlayerBehaviour"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Adds some MonoBehaviour methods for IVideoPlayers (since they aren't Components) that are sent from the current ",(0,a.kt)("inlineCode",{parentName:"li"},"VideoPlayerDescriptor")," Component."))),(0,a.kt)("li",{parentName:"ul"},"Removed both ",(0,a.kt)("inlineCode",{parentName:"li"},"CanBeUsed")," methods from ",(0,a.kt)("inlineCode",{parentName:"li"},"IVideoPlayer"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"These needed to be static"))),(0,a.kt)("li",{parentName:"ul"},"Downgraded XR Management to 4.4.0")),(0,a.kt)("h2",{id:"api-changes"},"API Changes"),(0,a.kt)("h3",{id:"component-security"},"Component Security"),(0,a.kt)("p",null,"Component Security simply protects users from malicious Avatars and Worlds acting naughty by exploiting built-in components."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"This is ",(0,a.kt)("strong",{parentName:"p"},"NOT")," a silver bullet! You should always practice precaution when allowing components through Component Security.")),(0,a.kt)("p",null,"To start this off, all methods can be invoked with either an ",(0,a.kt)("inlineCode",{parentName:"p"},"Avatar")," (meaning to run checks on the Avatar's transforms), or a ",(0,a.kt)("inlineCode",{parentName:"p"},"Scene")," (meaning to run checks on the World, excluding any Avatars)."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Getting Offending Components")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"GetOffendingComponents")," method returns a ",(0,a.kt)("inlineCode",{parentName:"p"},"Component[]")," containing all components that are blacklisted."),(0,a.kt)("admonition",{type:"danger"},(0,a.kt)("p",{parentName:"admonition"},"This method may return duplicate Components. Please be sure that you handle this accordingly.")),(0,a.kt)("p",null,"Below are some examples of usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},'// Assume myLogger is a Logger\nLogger myLogger = logger;\n\n// Assume myAvatar is an Avatar\nAvatar myAvatar = avatar;\n// This allows everything on an Avatar. Scripting, Physics, Audio, UI, Light, and Particles, in that order.\nAllowedAvatarComponent avatarComponentsAllowed = new AllowedAvatarComponent(true, true, true, true, true, true);\n\n// Assume myScene is a Scene\nScene myScene = scene;\n\nList<Component> offendingAvatarComponents = Security.GetOffendingComponents(myAvatar, avatarComponentsAllowed).ToList();\nList<Component> offendingWorldComponents = Security.GetOffendingComponents(myScene).ToList();\nComponent[] allOffendingComponents = offendingAvatarComponents.Concat(offendingWorldComponents).ToArray();\n\nforeach(Component offendingComponent in allOffendingComponents)\n{\n    if(offendingComponent == null || offendingComponent.gameObject == null) continue;\n    myLogger.Warn($"Found offending item {offendingComponent.GetType().Name} on {offendingComponent.gameObject.name}");\n}\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Removing Offending Components")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"RemoveOffendingItems")," removes all offending components on an Avatar or in a World automatically. This is the preferred way to quickly remove blacklisted components."),(0,a.kt)("p",null,"Below are some examples of usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"// Assume myAvatar is an Avatar\nAvatar myAvatar = avatar;\n// This allows only Scripting on an Avatar. Scripting, Physics, Audio, UI, Light, and Particles, in that order.\nAllowedAvatarComponent avatarComponentsAllowed = new AllowedAvatarComponent(true, false, false, false, false, false);\n\n// Assume myScene is a Scene\nScene myScene = scene;\n\n// Always remove for Worlds first\nSecurity.RemoveOffendingItems(myScene);\n// Then remove Avatars\nSecurity.RemoveOffendingItems(myAvatar, avatarComponentsAllowed);\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Allowing your own Components")),(0,a.kt)("p",null,"There are multiple categories for components to be put in, and while you don't have to use them, they should be used if you want the option for the components to be disabled by a user."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"When allowing a Type to a ",(0,a.kt)("inlineCode",{parentName:"p"},"SecurityList<T>"),", you cannot disallow that item, so be sure that's the type you want!")),(0,a.kt)("p",null,"Below is an example of adding ",(0,a.kt)("inlineCode",{parentName:"p"},"DynamicBone")," types to the Physics category"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"// Gets the Assembly that contains the types\nAssembly assembly = Assembly.GetExecutingAssembly();\n// Uses a built-in method to get DynamicBone types. You can replace this with your own Type(s) if you'd like.\nType[] dynamicBoneTypes = Security.GetDynamicBoneTypes(assembly);\nforeach(Type type in dynamicBoneTypes)\n{\n    // Adds all the types to the SecurityList for the Physics category\n    Security.PhysicsTypes.Allow(type);\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Adding Extra Restrictions to Allowed Types")),(0,a.kt)("p",null,"Sometimes, components may be allowed, but only under certain circumstances."),(0,a.kt)("p",null,"In the example below, ",(0,a.kt)("inlineCode",{parentName:"p"},"Canvas"),"es are allowed on both Avatars and Worlds, but Avatars are not allowed to have Canvases that aren't in ",(0,a.kt)("inlineCode",{parentName:"p"},"WorldSpace"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"// Assume this is being called at some point in some method\n\n// Register a Restriction for the Canvas type (must be a Component!) Callback with component (Component) and isWorld (bool)\nSecurity.RegisterComponentRestriction<Canvas>((component, isWorld) =>\n{\n    // Cast the Component to our Target Type\n    Canvas canvas = (Canvas) component;\n    // If this is not on an Avatar, force the RenderMode to WorldSpace\n    if (!isWorld) canvas.renderMode = RenderMode.WorldSpace;\n    // If the RenderMode is WorldSpace...\n    if (canvas.renderMode == RenderMode.WorldSpace)\n    {\n        // Add the TrackedDeviceGraphicRaycaster for VR support\n        TrackedDeviceGraphicRaycaster trackedDeviceGraphicRaycaster =\n            canvas.gameObject.GetComponent<TrackedDeviceGraphicRaycaster>();\n        if (trackedDeviceGraphicRaycaster == null)\n            canvas.gameObject.AddComponent<TrackedDeviceGraphicRaycaster>();\n    }\n});\n")))}d.isMDXComponent=!0}}]);