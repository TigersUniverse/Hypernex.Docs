"use strict";(self.webpackChunkhypernex_docs=self.webpackChunkhypernex_docs||[]).push([[6590],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>v});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,v=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(v,o(o({ref:t},p),{},{components:n})):r.createElement(v,o({ref:t},p))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},49275:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const i={},o="Subscribe",s={unversionedId:"engine-api/events/subscribe",id:"engine-api/events/subscribe",title:"Subscribe",description:"Listens for a specific event defined by ScriptEvent and invokes a SandboxFunc.",source:"@site/docs/engine-api/events/subscribe.md",sourceDirName:"engine-api/events",slug:"/engine-api/events/subscribe",permalink:"/docs/engine-api/events/subscribe",draft:!1,editUrl:"https://github.com/TigersUniverse/Hypernex.Docs/docs/engine-api/events/subscribe.md",tags:[],version:"current",frontMatter:{},sidebar:"engineSidebar",previous:{title:"ScriptEvents",permalink:"/docs/engine-api/events/"},next:{title:"float2",permalink:"/docs/engine-api/float2/"}},l={},c=[],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"subscribe"},"Subscribe"),(0,a.kt)("p",null,"Listens for a specific event defined by ",(0,a.kt)("a",{parentName:"p",href:"/docs/engine-api/scriptevent/"},"ScriptEvent")," and invokes a SandboxFunc."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Parameters")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"scriptEvent"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/docs/engine-api/scriptevent/"},"ScriptEvent")),(0,a.kt)("td",{parentName:"tr",align:null},"The ScriptEvent to listen to")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"callback"),(0,a.kt)("td",{parentName:"tr",align:null},"SandboxFunc"),(0,a.kt)("td",{parentName:"tr",align:null},"The function to invoke when the event is raised")))),(0,a.kt)("p",null,"The following example listens for a NetworkedEvent sent from a client, and forwards it to other clients."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"JavaScript")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'const myEventName = "someEventName"\nEvents.Subscribe(ScriptEvent.OnUserNetworkEvent, new SandboxFunc(engine).SetAction((userid, eventName, eventArgs) => {\n    /*\n     * userid - The UserId of the player that sent the message. This is 100% reliable as long as the user was authenticated.\n     * eventName - The provided name of the NetworkEvent that is being invoked. This is set by your code on the client.\n     * eventArgs - An object array of arguments. Can be null or empty.\n    */\n   if(eventName !== myEventName || eventArgs === null || eventArgs.length > 2) return\n   // All data MUST be serializable!\n   let newData = [userid, eventArgs[0], eventArgs[1]]\n   NetworkEvent.SendToAllClients(myEventName, newData)\n   // At this point, a client would need to Subscribe to ScriptEvent.OnServerNetworkEvent\n}))\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Lua")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local myEventName = "someEventName"\nEvents.Subscribe(ScriptEvent.OnUserNetworkEvent, new SandboxFunc().SetAction(function (userid, eventName, eventArgs)\n    --[[\n      userid - The UserId of the player that sent the message. This is 100% reliable as long as the user was authenticated.\n      eventName - The provided name of the NetworkEvent that is being invoked. This is set by your code on the client.\n      eventArgs - An object array of arguments. Can be null or empty.\n    --]]\n   if eventName !== myEventName or eventArgs === null pr eventArgs.length > 2 then return end\n   -- All data MUST be serializable!\n   local newData = {userid, eventArgs[0], eventArgs[1]}\n   NetworkEvent.SendToAllClients(myEventName, newData)\n   -- At this point, a client would need to Subscribe to ScriptEvent.OnServerNetworkEvent\nend))\n')))}d.isMDXComponent=!0}}]);