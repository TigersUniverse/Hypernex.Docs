"use strict";(self.webpackChunkhypernex_docs=self.webpackChunkhypernex_docs||[]).push([[3414],{3905:(n,t,e)=>{e.d(t,{Zo:()=>d,kt:()=>f});var o=e(67294);function a(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function i(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,o)}return e}function r(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?i(Object(e),!0).forEach((function(t){a(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):i(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function l(n,t){if(null==n)return{};var e,o,a=function(n,t){if(null==n)return{};var e,o,a={},i=Object.keys(n);for(o=0;o<i.length;o++)e=i[o],t.indexOf(e)>=0||(a[e]=n[e]);return a}(n,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(o=0;o<i.length;o++)e=i[o],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(a[e]=n[e])}return a}var p=o.createContext({}),c=function(n){var t=o.useContext(p),e=t;return n&&(e="function"==typeof n?n(t):r(r({},t),n)),e},d=function(n){var t=c(n.components);return o.createElement(p.Provider,{value:t},n.children)},u="mdxType",s={inlineCode:"code",wrapper:function(n){var t=n.children;return o.createElement(o.Fragment,{},t)}},b=o.forwardRef((function(n,t){var e=n.components,a=n.mdxType,i=n.originalType,p=n.parentName,d=l(n,["components","mdxType","originalType","parentName"]),u=c(e),b=a,f=u["".concat(p,".").concat(b)]||u[b]||s[b]||i;return e?o.createElement(f,r(r({ref:t},d),{},{components:e})):o.createElement(f,r({ref:t},d))}));function f(n,t){var e=arguments,a=t&&t.mdxType;if("string"==typeof n||a){var i=e.length,r=new Array(i);r[0]=b;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=n,l[u]="string"==typeof n?n:a,r[1]=l;for(var c=2;c<i;c++)r[c]=e[c];return o.createElement.apply(null,r)}return o.createElement.apply(null,e)}b.displayName="MDXCreateElement"},94386:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>s,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var o=e(87462),a=(e(67294),e(3905));const i={},r="Download",l={unversionedId:"engine-api/cobaltoption/download",id:"engine-api/cobaltoption/download",title:"Download",description:"Downloads the option to be used with an Audio or Video",source:"@site/docs/engine-api/cobaltoption/download.md",sourceDirName:"engine-api/cobaltoption",slug:"/engine-api/cobaltoption/download",permalink:"/docs/engine-api/cobaltoption/download",draft:!1,editUrl:"https://github.com/TigersUniverse/Hypernex.Docs/docs/engine-api/cobaltoption/download.md",tags:[],version:"current",frontMatter:{},sidebar:"engineSidebar",previous:{title:"CobaltOption",permalink:"/docs/engine-api/cobaltoption/"},next:{title:"CobaltOptions",permalink:"/docs/engine-api/cobaltoptions/"}},p={},c=[],d={toc:c},u="wrapper";function s(n){let{components:t,...e}=n;return(0,a.kt)(u,(0,o.Z)({},d,e,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"download"},"Download"),(0,a.kt)("p",null,"Downloads the option to be used with an Audio or Video"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Parameters")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"callback"),(0,a.kt)("td",{parentName:"tr",align:null},"SandboxFunc"),(0,a.kt)("td",{parentName:"tr",align:null},"The function to call back when done")))),(0,a.kt)("p",null,"The following example gets options from a given URL, then downloads the first one"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"JavaScript")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'let getMedia = new GetMedia()\ngetMedia.url = "https://www.youtube.com/watch?v=ZdRontrcHRM"\ngetMedia.isAudioOnly = true\nCobalt.GetOptions(getMedia, new SandboxFunc(engine).SetAction(options => {\n    if(options === null || options.Options.length <= 0){\n        print("No options available!")\n        return\n    }\n    print("Got options with " + options.Options.length + " options!")\n    // Picking first option\n    let cobaltOption = options.Options[0]\n    cobaltOption.Download(new SandboxFunc(engine).SetAction(file => {\n        if(file === null){\n            print("Failed to download!")\n            return\n        }\n        Audio.LoadFromCobalt(audio, file, new SandboxFunc(engine).SetAction(() => {\n            Audio.SetPosition(audio, 0)\n            Audio.Play(audio)\n        }))\n    }))\n}))\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Lua")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local getMedia = GetMedia()\ngetMedia.url = "https://www.youtube.com/watch?v=ZdRontrcHRM"\ngetMedia.isAudioOnly = true\nCobalt.GetOptions(getMedia, SandboxFunc().SetAction(function(options)\n    if options == null or #options.Options <= 0 then\n        print("No options available!")\n        return\n    end\n    print("Got options with "..tostring(#options.Options).." options!")\n    -- Picking first option\n    local cobaltOption = options.Options[1]\n    cobaltOption.Download(SandboxFunc().SetAction(function(file)\n        if file == nil then\n            print("Failed to download!")\n            return\n        end\n        Audio.LoadFromCobalt(audio, file, SandboxFunc().SetAction(function()\n            Audio.SetPosition(audio, 0)\n            Audio.Play(audio)\n        end))\n    end))\nend))\n')))}s.isMDXComponent=!0}}]);