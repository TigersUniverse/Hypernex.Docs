"use strict";(self.webpackChunkhypernex_docs=self.webpackChunkhypernex_docs||[]).push([[5426],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>k});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=p(t),u=a,k=c["".concat(s,".").concat(u)]||c[u]||m[u]||i;return t?r.createElement(k,l(l({ref:n},d),{},{components:t})):r.createElement(k,l({ref:n},d))}));function k(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=u;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[c]="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},85794:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var r=t(87462),a=(t(67294),t(3905));const i={sidebar_position:0},l="SendToClient",o={unversionedId:"engine-api/handlers/network/sendtoclient",id:"engine-api/handlers/network/sendtoclient",title:"SendToClient",description:"This method is only available on ServerScripts",source:"@site/docs/engine-api/handlers/network/sendtoclient.md",sourceDirName:"engine-api/handlers/network",slug:"/engine-api/handlers/network/sendtoclient",permalink:"/docs/engine-api/handlers/network/sendtoclient",draft:!1,editUrl:"https://github.com/TigersUniverse/Hypernex.Docs/docs/engine-api/handlers/network/sendtoclient.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"engineSidebar",previous:{title:"Network",permalink:"/docs/engine-api/handlers/network/"},next:{title:"SendToAllClients",permalink:"/docs/engine-api/handlers/network/sendtoallclients"}},s={},p=[],d={toc:p},c="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(c,(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sendtoclient"},"SendToClient"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"This method is only available on ",(0,a.kt)("strong",{parentName:"p"},"ServerScripts"))),(0,a.kt)("p",null,"Sends a NetworkEvent to a client with a given name, message type, and object array data."),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"Data in the object array ",(0,a.kt)("strong",{parentName:"p"},"MUST")," be serializable over the network!")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Parameters")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"userid"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"The UserId to send the data to")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"eventName"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"The name of the event to be identified")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"data"),(0,a.kt)("td",{parentName:"tr",align:null},"object[]"),(0,a.kt)("td",{parentName:"tr",align:null},"An Array containing data to send.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"messageChannel"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/docs/engine-api/messagechannel/"},"MessageChannel")),(0,a.kt)("td",{parentName:"tr",align:null},"The MessageChannel to send data over. Use this based on how often you send data between the server and the client.")))),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("strong",{parentName:"li"},"messageChannel")," parameter is default at ",(0,a.kt)("inlineCode",{parentName:"li"},"MessageChannel.Reliable")),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("strong",{parentName:"li"},"data")," parameter can be ",(0,a.kt)("inlineCode",{parentName:"li"},"null")))),(0,a.kt)("p",null,"The example below listens for the ",(0,a.kt)("inlineCode",{parentName:"p"},"numbers")," message (see ",(0,a.kt)("a",{parentName:"p",href:"/docs/engine-api/handlers/network/sendtoserver"},"SendToServer")," example), and then relays it back to the client with all the numbers plus one with the event name ",(0,a.kt)("inlineCode",{parentName:"p"},"newNumbers"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"JavaScript")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'let Events = instance.GetHandler("Events")\nlet Network = instance.GetHandler("Network")\n\nEvents.Subscribe(ScriptEvent.OnUserNetworkEvent, new SandboxFunc(engine).SetAction((userId, eventName, eventArgs) => {\n    if(eventArgs === undefined)\n        return\n    switch(eventName){\n        case "numbers":{\n            let newData = []\n            for(let i = 0; i < eventArgs.length; i++){\n                let number = eventArgs[i]\n                newData.push(number + 1)\n            }\n            Network.SendToClient(userId, "newNumbers", newData)\n            break\n        }\n    }\n}))\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Lua")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local Events = instance.GetHandler("Events")\nlocal Network = instance.GetHandler("Network")\n\nEvents.Subscribe(ScriptEvent.OnUserNetworkEvent, SandboxFunc().SetAction(function(userId, eventName, eventArgs)\n    if eventArgs == nil then return end\n    if eventName == "numbers" then\n        local newData = {}\n        for _, number in ipairs(eventArgs) do\n            table.insert(newData, number + 1)\n        end\n        Network.SendToClient(userId, "newNumbers", newData)\n    end\nend))\n')))}m.isMDXComponent=!0}}]);