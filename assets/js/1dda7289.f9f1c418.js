"use strict";(self.webpackChunkhypernex_docs=self.webpackChunkhypernex_docs||[]).push([[4873],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(n),c=a,g=u["".concat(p,".").concat(c)]||u[c]||m[c]||i;return n?r.createElement(g,o(o({ref:t},d),{},{components:n})):r.createElement(g,o({ref:t},d))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},77676:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const i={},o="GetWithOptions",l={unversionedId:"engine-api/streaming/getwithoptions",id:"engine-api/streaming/getwithoptions",title:"GetWithOptions",description:"+ This method is only available on ServerScripts",source:"@site/docs/engine-api/streaming/getwithoptions.md",sourceDirName:"engine-api/streaming",slug:"/engine-api/streaming/getwithoptions",permalink:"/docs/engine-api/streaming/getwithoptions",draft:!1,editUrl:"https://github.com/TigersUniverse/Hypernex.Docs/docs/engine-api/streaming/getwithoptions.md",tags:[],version:"current",frontMatter:{},sidebar:"engineSidebar",previous:{title:"Download",permalink:"/docs/engine-api/streaming/download"},next:{title:"Texture",permalink:"/docs/engine-api/texture/"}},p={},s=[],d={toc:s},u="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"getwithoptions"},"GetWithOptions"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"This method is only available on ",(0,a.kt)("strong",{parentName:"li"},"ServerScripts")))),(0,a.kt)("p",null,"Gets a ",(0,a.kt)("a",{parentName:"p",href:"/docs/engine-api/videorequest/"},"VideoRequest")," from a specified URL."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Parameters")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Parameter Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"url"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"string")),(0,a.kt)("td",{parentName:"tr",align:null},"The URL to pull media from. This should be a valid URI")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"onDone"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"function("),(0,a.kt)("a",{parentName:"td",href:"/docs/engine-api/videorequest/"},"VideoRequest"),(0,a.kt)("inlineCode",{parentName:"td"},")")),(0,a.kt)("td",{parentName:"tr",align:null},"A callback for when the media information is pulled")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"options"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/docs/engine-api/streamdownloadoptions/"},"StreamDownloadOptions")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("em",{parentName:"td"},"(Optional)")," Provides options for downloading media")))),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Use the ",(0,a.kt)("inlineCode",{parentName:"p"},"Get(string, function(VideoRequest))")," overload for using default options")),(0,a.kt)("p",null,"The example below downloads media and sets a VideoPlayer to that media"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"JavaScript")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'let Events = instance.GetHandler("Events")\nlet Network = instance.GetHandler("Network")\n\nEvents.Subscribe(ScriptEvent.OnUserNetworkEvent, function(userid, eventName, eventArgs) {\n    if (eventName == "getVideo") {\n        Streaming.Get(eventArgs[1], function(videoRequest){\n            // VideoRequests will return null/undefined if no media is found at the specified URL\n            if (videoRequest === undefined || videoRequest === null) return\n            Network.SendToAllClients("loadVideo", [videoRequest])\n        }\n    }\n})\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Lua")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local Events = instance.GetHandler("Events")\nlocal Network = instance.GetHandler("Network")\n\nEvents.Subscribe(ScriptEvent.OnUserNetworkEvent, function(userid, eventName, eventArgs)\n    if eventName == "getVideo" then\n        Streaming.Get(eventArgs[1], function(videoRequest)\n            -- VideoRequests will return nil if no media is found at the specified URL\n            if videoRequest == nil then return end\n            Network.SendToAllClients("loadVideo", {videoRequest})\n        end)\n    end\nend)\n')))}m.isMDXComponent=!0}}]);