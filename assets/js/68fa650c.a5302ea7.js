"use strict";(self.webpackChunkhypernex_docs=self.webpackChunkhypernex_docs||[]).push([[4404],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>g});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),d=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=d(e.components);return r.createElement(l.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=d(t),c=a,g=p["".concat(l,".").concat(c)]||p[c]||m[c]||o;return t?r.createElement(g,i(i({ref:n},u),{},{components:t})):r.createElement(g,i({ref:n},u))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=c;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var d=2;d<o;d++)i[d]=t[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},25132:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var r=t(87462),a=(t(67294),t(3905));const o={},i="1.4.0",s={unversionedId:"changelogs/Hypernex.API/140",id:"changelogs/Hypernex.API/140",title:"1.4.0",description:"New moderation backends! The moderator backend allows users with rank Moderator or higher to apply certain moderator actions on users and content. This also adds the request invite feature, where users can request to have an invite sent from the desired user.",source:"@site/docs/changelogs/Hypernex.API/140.md",sourceDirName:"changelogs/Hypernex.API",slug:"/changelogs/Hypernex.API/140",permalink:"/docs/changelogs/Hypernex.API/140",draft:!1,editUrl:"https://github.com/TigersUniverse/Hypernex.Docs/docs/changelogs/Hypernex.API/140.md",tags:[],version:"current",frontMatter:{},sidebar:"changelogSidebar",next:{title:"1.4.1",permalink:"/docs/changelogs/Hypernex.API/141"}},l={},d=[{value:"Changes",id:"changes",level:2},{value:"API Changes",id:"api-changes",level:2},{value:"Added Moderation",id:"added-moderation",level:3},{value:"Adding a Badge",id:"adding-a-badge",level:4},{value:"Removing a Badge",id:"removing-a-badge",level:4},{value:"Setting a Rank",id:"setting-a-rank",level:4},{value:"Warning a User",id:"warning-a-user",level:4},{value:"Banning a User",id:"banning-a-user",level:4},{value:"Requesting Invites",id:"requesting-invites",level:3}],u={toc:d},p="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"140"},"1.4.0"),(0,a.kt)("p",null,"New moderation backends! The moderator backend allows users with rank ",(0,a.kt)("inlineCode",{parentName:"p"},"Moderator")," or higher to apply certain moderator actions on users and content. This also adds the request invite feature, where users can request to have an invite sent from the desired user."),(0,a.kt)("h2",{id:"changes"},"Changes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Added ",(0,a.kt)("inlineCode",{parentName:"li"},"/api/v1/moderation")," (",(0,a.kt)("inlineCode",{parentName:"li"},"POST"),") to API",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"See below for more details"))),(0,a.kt)("li",{parentName:"ul"},"Added ",(0,a.kt)("inlineCode",{parentName:"li"},"requestinvite")," message to Socket",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"See below for more details"))),(0,a.kt)("li",{parentName:"ul"},"By default, login tokens now expire after ",(0,a.kt)("inlineCode",{parentName:"li"},"30")," days instead of ",(0,a.kt)("inlineCode",{parentName:"li"},"7")," days."),(0,a.kt)("li",{parentName:"ul"},"Fixed issue where server would crash without Internet"),(0,a.kt)("li",{parentName:"ul"},"Fixed issue where ",(0,a.kt)("inlineCode",{parentName:"li"},"isUserBodyValid")," would return ",(0,a.kt)("inlineCode",{parentName:"li"},"true")," for ",(0,a.kt)("inlineCode",{parentName:"li"},"null")," values"),(0,a.kt)("li",{parentName:"ul"},"Fixed typo in ",(0,a.kt)("inlineCode",{parentName:"li"},"SocketServer.GetAllGameServers()"))),(0,a.kt)("h2",{id:"api-changes"},"API Changes"),(0,a.kt)("h3",{id:"added-moderation"},"Added Moderation"),(0,a.kt)("p",null,"Moderation is here! (kinda) The new moderation endpoint allows moderators to moderate content as they see fit. Here are some example messages:"),(0,a.kt)("h4",{id:"adding-a-badge"},"Adding a Badge"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"POST /api/v1/moderation")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "userid": "moderator userid",\n    "tokenContent": "moderator tokenContent",\n    "action": "addbadge",\n    "targetUserId": "the target userid",\n    "badgeName": "the name of the badge"\n}\n')),(0,a.kt)("h4",{id:"removing-a-badge"},"Removing a Badge"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"POST /api/v1/moderation")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "userid": "moderator userid",\n    "tokenContent": "moderator tokenContent",\n    "action": "removebadge",\n    "targetUserId": "the target userid",\n    "badgeName": "the name of the badge"\n}\n')),(0,a.kt)("h4",{id:"setting-a-rank"},"Setting a Rank"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"the rank 3 is Verified")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"POST /api/v1/moderation")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "userid": "moderator userid",\n    "tokenContent": "moderator tokenContent",\n    "action": "setrank",\n    "targetUserId": "the target userid",\n    "newRank": 3\n}\n')),(0,a.kt)("h4",{id:"warning-a-user"},"Warning a User"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"POST /api/v1/moderation")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "userid": "moderator userid",\n    "tokenContent": "moderator tokenContent",\n    "action": "warnuser",\n    "targetUserId": "the target userid",\n    "warnReason": "the reason for the warn",\n    "warnDescription": "the description for the warn"\n}\n')),(0,a.kt)("h4",{id:"banning-a-user"},"Banning a User"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"POST /api/v1/moderation")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"timeEnd is a UNIX timestamp")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "userid": "moderator userid",\n    "tokenContent": "moderator tokenContent",\n    "action": "addbadge",\n    "targetUserId": "the target userid",\n    "banReason": "the reason for the ban",\n    "banDescription": "the description for the ban",\n    "timeEnd": 451351341\n}\n')),(0,a.kt)("h3",{id:"requesting-invites"},"Requesting Invites"),(0,a.kt)("p",null,"Users can now request invites from other users! To get this to work, a new property needed to be added to the ",(0,a.kt)("inlineCode",{parentName:"p"},"User")," API Object."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"isInWorld")," describes if a user is in an instance, and is not on DoNotDisturb status nor Offline status."),(0,a.kt)("p",null,"To send a request, simply send the following message to the Socket Server"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "userId": "your userid",\n    "tokenContent": "your tokenContent (if not verified by socket yet)",\n    "message": "requestinvite",\n    "args": {\n        "targetUserId": "the target userId"\n    }\n}\n')),(0,a.kt)("p",null,"Then, if the request is allowed, the ",(0,a.kt)("inlineCode",{parentName:"p"},"targetUserId")," will recieve the following message:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "message": "gotinviterequest",\n    "result": {\n        "fromUserId": "the userId that sent the invite request"\n    }\n}\n')),(0,a.kt)("p",null,"From there, the target user can decide to send an Invite or ignore the message."))}m.isMDXComponent=!0}}]);