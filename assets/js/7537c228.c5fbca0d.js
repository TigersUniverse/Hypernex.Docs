"use strict";(self.webpackChunkhypernex_docs=self.webpackChunkhypernex_docs||[]).push([[7005],{3905:(t,e,r)=>{r.d(e,{Zo:()=>p,kt:()=>k});var n=r(67294);function l(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function a(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){l(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function o(t,e){if(null==t)return{};var r,n,l=function(t,e){if(null==t)return{};var r,n,l={},i=Object.keys(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||(l[r]=t[r]);return l}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(l[r]=t[r])}return l}var s=n.createContext({}),d=function(t){var e=n.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):a(a({},e),t)),r},p=function(t){var e=d(t.components);return n.createElement(s.Provider,{value:e},t.children)},c="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},y=n.forwardRef((function(t,e){var r=t.components,l=t.mdxType,i=t.originalType,s=t.parentName,p=o(t,["components","mdxType","originalType","parentName"]),c=d(r),y=l,k=c["".concat(s,".").concat(y)]||c[y]||u[y]||i;return r?n.createElement(k,a(a({ref:e},p),{},{components:r})):n.createElement(k,a({ref:e},p))}));function k(t,e){var r=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var i=r.length,a=new Array(i);a[0]=y;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o[c]="string"==typeof t?t:l,a[1]=o;for(var d=2;d<i;d++)a[d]=r[d];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},430:(t,e,r)=>{r.r(e),r.d(e,{contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var n=r(87462),l=(r(67294),r(3905));const i={},a="update/world",o={type:"api",id:"update-world",unversionedId:"update-world",title:"update/world",description:"",slug:"/update-world",frontMatter:{},api:{description:"Updates the file associated with a world by its id",requestBody:{description:"Information required to update a world by its id",content:{"application/json":{schema:{type:"object",properties:{userid:{description:"The UserId",type:"string"},tokenContent:{description:"The token's content",type:"string"},fileid:{description:"The File Id corresponding to the World",type:"string"},worldmeta:{description:"The WorldMeta for a World",type:"object",properties:{Publicity:{description:"The publicity of an world represented as an integer from 0-1",type:"integer"},Name:{description:"The name of the world",type:"string"},Description:{description:"The world's description",type:"string"},Tags:{description:"The world's tags",type:"array"},ThumbnailURL:{description:"The Thumbnail URL for a world",type:"string"},IconURLs:{description:"An array of Image URLs as icons for a world",type:"array"},ServerScripts:{description:"An array of Script URLs as ServerScripts for a world",type:"array"},BuildPlatform:{description:"The BuildPlatform for the file being uploaded along with the worldMeta",type:"integer"},Id:{description:"The Id of an existing world being overwritten or added to",type:"string"}}}},required:["userid","tokenContent","fileid","worldmeta"]}}}},responses:{200:{description:"A successful request",content:{"application/json":{schema:{type:"object",properties:{success:{description:"Was the operation a success",type:"boolean"},message:{description:"The message returned by the server",type:"string"},result:{description:"The result of the server response",type:"object"}},required:["success","message"]}}}}},method:"post",path:"/update/world",parameters:[],servers:[{url:"https://play.hypernex.dev/api/v1",description:"Version 1 API Main Server"}],jsonRequestBodyExample:{userid:"string",tokenContent:"string",fileid:"string",worldmeta:{Publicity:0,Name:"string",Description:"string",Tags:[null],ThumbnailURL:"string",IconURLs:[null],ServerScripts:[null],BuildPlatform:0,Id:"string"}},info:{title:"Hypernex.API Documentation",version:"1"},postman:{name:"update/world",description:{content:"Updates the file associated with a world by its id",type:"text/plain"},url:{path:["update","world"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'{\n    "userid": "<string>",\n    "tokenContent": "<string>",\n    "fileid": "<string>",\n    "worldmeta": {\n        "Publicity": "<integer>",\n        "Name": "<string>",\n        "Description": "<string>",\n        "Tags": "<array>",\n        "ThumbnailURL": "<string>",\n        "IconURLs": "<array>",\n        "ServerScripts": "<array>",\n        "BuildPlatform": "<integer>",\n        "Id": "<string>"\n    }\n}'}}},source:"@site/openapi-docs.json",sourceDirName:".",permalink:"/docs/cloud-api/update-world",previous:{title:"update/avatar",permalink:"/docs/cloud-api/update-avatar"},next:{title:"remove/avatar",permalink:"/docs/cloud-api/remove-avatar"}},s=[],d={toc:s},p="wrapper";function c(t){let{components:e,...r}=t;return(0,l.kt)(p,(0,n.Z)({},d,r,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"updateworld"},"update/world"),(0,l.kt)("p",null,"Updates the file associated with a world by its id"),(0,l.kt)("table",{style:{display:"table",width:"100%"}},(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",{style:{textAlign:"left"}},"Request Body ",(0,l.kt)("div",null,(0,l.kt)("p",null,"Information required to update a world by its id"))))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"userid"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,l.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"The UserId")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"tokenContent"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,l.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"The token's content")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"fileid"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,l.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"The File Id corresponding to the World")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"worldmeta"),(0,l.kt)("span",{style:{opacity:"0.6"}}," object"),(0,l.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,l.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"The WorldMeta for a World")),(0,l.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"Publicity"),(0,l.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"The publicity of an world represented as an integer from 0-1")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"Name"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"The name of the world")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"Description"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"The world's description")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"Tags"),(0,l.kt)("span",{style:{opacity:"0.6"}}," array"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"The world's tags")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"ThumbnailURL"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"The Thumbnail URL for a world")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"IconURLs"),(0,l.kt)("span",{style:{opacity:"0.6"}}," array"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"An array of Image URLs as icons for a world")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"ServerScripts"),(0,l.kt)("span",{style:{opacity:"0.6"}}," array"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"An array of Script URLs as ServerScripts for a world")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"BuildPlatform"),(0,l.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"The BuildPlatform for the file being uploaded along with the worldMeta")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"Id"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"The Id of an existing world being overwritten or added to")))))))))),(0,l.kt)("table",{style:{display:"table",width:"100%"}},(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",{style:{textAlign:"left"}},"Responses"))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("div",{style:{display:"flex"}},(0,l.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,l.kt)("code",null,"200")),(0,l.kt)("div",null,(0,l.kt)("p",null,"A successful request"))),(0,l.kt)("div",null,(0,l.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",{style:{textAlign:"left"}},"Schema ",(0,l.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,l.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"}}," OPTIONAL"),(0,l.kt)("div",null)))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"success"),(0,l.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"Was the operation a success")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"message"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"The message returned by the server")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"result"),(0,l.kt)("span",{style:{opacity:"0.6"}}," object"),(0,l.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,l.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"}}," OPTIONAL"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"The result of the server response"))))))))))))}c.isMDXComponent=!0}}]);