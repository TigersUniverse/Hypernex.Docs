"use strict";(self.webpackChunkhypernex_docs=self.webpackChunkhypernex_docs||[]).push([[1039],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,y=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(y,i(i({ref:t},c),{},{components:n})):r.createElement(y,i({ref:t},c))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},64324:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const o={},i="1.3.0",l={unversionedId:"changelogs/Hypernex.CCK/130",id:"changelogs/Hypernex.CCK/130",title:"1.3.0",description:"Small CCK update to interface VideoPlayers. The reasoning for interfacing VideoPlayers is explained more in Hypernex.Unity 2024.05.1b's changelogs.",source:"@site/docs/changelogs/Hypernex.CCK/130.md",sourceDirName:"changelogs/Hypernex.CCK",slug:"/changelogs/Hypernex.CCK/130",permalink:"/docs/changelogs/Hypernex.CCK/130",draft:!1,editUrl:"https://github.com/TigersUniverse/Hypernex.Docs/docs/changelogs/Hypernex.CCK/130.md",tags:[],version:"current",frontMatter:{},sidebar:"changelogSidebar",previous:{title:"1.4.1",permalink:"/docs/changelogs/Hypernex.API/141"},next:{title:"1.4.0",permalink:"/docs/changelogs/Hypernex.CCK/140"}},p={},s=[{value:"Changes",id:"changes",level:2},{value:"Component Changes",id:"component-changes",level:2},{value:"VideoPlayerDescriptor",id:"videoplayerdescriptor",level:3}],c={toc:s},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"130"},"1.3.0"),(0,a.kt)("p",null,"Small CCK update to interface VideoPlayers. The reasoning for interfacing VideoPlayers is explained more in ",(0,a.kt)("a",{parentName:"p",href:"/docs/changelogs/Hypernex.Unity/2024051b"},"Hypernex.Unity 2024.05.1b's changelogs"),"."),(0,a.kt)("h2",{id:"changes"},"Changes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Added ",(0,a.kt)("inlineCode",{parentName:"li"},"VideoPlayerDescriptor"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"A user-managed component that allows creators to define what a VideoPlayer is in a world."))),(0,a.kt)("li",{parentName:"ul"},"Added ",(0,a.kt)("inlineCode",{parentName:"li"},"IVideoPlayer"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Interface for creating and managing a VideoPlayer solution. Will be used to expand beyond Unity's built-in video players.")))),(0,a.kt)("h2",{id:"component-changes"},"Component Changes"),(0,a.kt)("h3",{id:"videoplayerdescriptor"},"VideoPlayerDescriptor"),(0,a.kt)("p",null,"The VideoPlayerDescriptor is a new component for World Creators to use. It allows creators to define a VideoPlayer to be supported by all IVideoPlayer types registered in Hypernex.Unity. The setup is simple and only has few values needing configured."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a Plane (or whatever desired surface)",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Really, anything with a ",(0,a.kt)("inlineCode",{parentName:"li"},"Renderer")," component works"))),(0,a.kt)("li",{parentName:"ol"},"Add the ",(0,a.kt)("inlineCode",{parentName:"li"},"VideoPlayerDescriptor")," component to the GameObject",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"It does not have to be on the same GameObject as the Renderer"))),(0,a.kt)("li",{parentName:"ol"},"Input all ",(0,a.kt)("inlineCode",{parentName:"li"},"Renderer"),"(s) into the ",(0,a.kt)("inlineCode",{parentName:"li"},"VideoOutputs")," List."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("em",{parentName:"li"},"(Optional)")," Link an ",(0,a.kt)("inlineCode",{parentName:"li"},"AudioSource")," to the ",(0,a.kt)("inlineCode",{parentName:"li"},"AudioOutput")," field."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("em",{parentName:"li"},"(Optional)")," Toggle ",(0,a.kt)("inlineCode",{parentName:"li"},"IsEmissive")," depending on if you want the EmmisionMap field in your shader to be set to the Video Texture",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"If your shader's emission property is not ",(0,a.kt)("inlineCode",{parentName:"li"},"_EmissionMap"),", then be sure to set the ",(0,a.kt)("inlineCode",{parentName:"li"},"ShaderEmissionProperty")," field to what it is!")))))}u.isMDXComponent=!0}}]);