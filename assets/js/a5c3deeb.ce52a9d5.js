"use strict";(self.webpackChunkhypernex_docs=self.webpackChunkhypernex_docs||[]).push([[9261],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>y});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},k=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),c=p(n),k=r,y=c["".concat(s,".").concat(k)]||c[k]||u[k]||l;return n?i.createElement(y,o(o({ref:t},d),{},{components:n})):i.createElement(y,o({ref:t},d))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=k;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[c]="string"==typeof e?e:r,o[1]=a;for(var p=2;p<l;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}k.displayName="MDXCreateElement"},13761:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>a,toc:()=>s});var i=n(87462),r=(n(67294),n(3905));const l={},o="updateBio",a={type:"api",id:"update-bio",unversionedId:"update-bio",title:"updateBio",description:"",slug:"/update-bio",frontMatter:{},api:{description:"Updates a user's bio",requestBody:{description:"Information required to update a bio",content:{"application/json":{schema:{type:"object",properties:{userid:{description:"The UserId",type:"string"},tokenContent:{description:"The token's content",type:"string"},bio:{description:"The new bio",type:"object",properties:{isPrivateAccount:{description:"If the account is private",type:"boolean"},Status:{description:"A status indicator represented from 1-6",type:"integer"},StatusText:{description:"The user generated status",type:"string"},Description:{description:"A user's description",type:"string"},PfpURL:{description:"The URL for a profile picture (restrictions configurable by server)",type:"string"},BannerURL:{description:"The URL for a profile banner (restrictions configurable by server)",type:"string"},DisplayName:{description:"An optional Display Name for a user",type:"string"},Pronouns:{description:'Either an object to define set, or "remove" to remove pronouns',type:"object",properties:{nominativeId:{description:"The id for the nominative pronoun",type:"integer"},accusativeId:{description:"The id for the accusative pronoun",type:"integer"},reflexiveId:{description:"The id for the reflexive pronoun",type:"integer"},independentId:{description:"The id for an independent pronoun",type:"integer"},dependentId:{description:"The id for a dependent pronoun",type:"integer"},DisplayThree:{description:"Whether or not to display three pronoun cases instead of two (such as He/Him/Himself)",type:"boolean"},firstCase:{description:"The first case id to be shown",type:"integer"},secondCase:{description:"The second case id to be shown",type:"integer"},thirdCase:{description:"The third case id to be shown",type:"integer"}}}}}},required:["userid","tokenContent"]}}}},responses:{200:{description:"A successful request",content:{"application/json":{schema:{type:"object",properties:{success:{description:"Was the operation a success",type:"boolean"},message:{description:"The message returned by the server",type:"string"},result:{description:"The result of the server response",type:"object"}},required:["success","message"]}}}}},method:"post",path:"/updateBio",parameters:[],servers:[{url:"https://play.hypernex.dev/api/v1",description:"Version 1 API Main Server"}],jsonRequestBodyExample:{userid:"string",tokenContent:"string",bio:{isPrivateAccount:!0,Status:0,StatusText:"string",Description:"string",PfpURL:"string",BannerURL:"string",DisplayName:"string",Pronouns:{nominativeId:0,accusativeId:0,reflexiveId:0,independentId:0,dependentId:0,DisplayThree:!0,firstCase:0,secondCase:0,thirdCase:0}}},info:{title:"Hypernex.API Documentation",version:"1"},postman:{name:"updateBio",description:{content:"Updates a user's bio",type:"text/plain"},url:{path:["updateBio"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'{\n    "userid": "<string>",\n    "tokenContent": "<string>",\n    "bio": {\n        "isPrivateAccount": "<boolean>",\n        "Status": "<integer>",\n        "StatusText": "<string>",\n        "Description": "<string>",\n        "PfpURL": "<string>",\n        "BannerURL": "<string>",\n        "DisplayName": "<string>",\n        "Pronouns": {\n            "nominativeId": "<integer>",\n            "accusativeId": "<integer>",\n            "reflexiveId": "<integer>",\n            "independentId": "<integer>",\n            "dependentId": "<integer>",\n            "DisplayThree": "<boolean>",\n            "firstCase": "<integer>",\n            "secondCase": "<integer>",\n            "thirdCase": "<integer>"\n        }\n    }\n}'}}},source:"@site/openapi-docs.json",sourceDirName:".",permalink:"/docs/cloud-api/update-bio",previous:{title:"resetPassword",permalink:"/docs/cloud-api/reset-password"},next:{title:"blockUser",permalink:"/docs/cloud-api/block-user"}},s=[],p={toc:s},d="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"updatebio"},"updateBio"),(0,r.kt)("p",null,"Updates a user's bio"),(0,r.kt)("table",{style:{display:"table",width:"100%"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Request Body ",(0,r.kt)("div",null,(0,r.kt)("p",null,"Information required to update a bio"))))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"userid"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The UserId")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"tokenContent"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The token's content")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"bio"),(0,r.kt)("span",{style:{opacity:"0.6"}}," object"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The new bio")),(0,r.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"isPrivateAccount"),(0,r.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"If the account is private")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"Status"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"A status indicator represented from 1-6")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"StatusText"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The user generated status")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"Description"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"A user's description")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"PfpURL"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The URL for a profile picture (restrictions configurable by server)")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"BannerURL"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The URL for a profile banner (restrictions configurable by server)")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"DisplayName"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"An optional Display Name for a user")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"Pronouns"),(0,r.kt)("span",{style:{opacity:"0.6"}}," object"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,'Either an object to define set, or "remove" to remove pronouns')),(0,r.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"nominativeId"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The id for the nominative pronoun")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"accusativeId"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The id for the accusative pronoun")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"reflexiveId"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The id for the reflexive pronoun")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"independentId"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The id for an independent pronoun")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"dependentId"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The id for a dependent pronoun")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"DisplayThree"),(0,r.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"Whether or not to display three pronoun cases instead of two (such as He/Him/Himself)")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"firstCase"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The first case id to be shown")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"secondCase"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The second case id to be shown")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"thirdCase"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The third case id to be shown")))))))))))))),(0,r.kt)("table",{style:{display:"table",width:"100%"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Responses"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("div",{style:{display:"flex"}},(0,r.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,r.kt)("code",null,"200")),(0,r.kt)("div",null,(0,r.kt)("p",null,"A successful request"))),(0,r.kt)("div",null,(0,r.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Schema ",(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"}}," OPTIONAL"),(0,r.kt)("div",null)))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"success"),(0,r.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"Was the operation a success")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"message"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The message returned by the server")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"result"),(0,r.kt)("span",{style:{opacity:"0.6"}}," object"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"}}," OPTIONAL"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The result of the server response"))))))))))))}c.isMDXComponent=!0}}]);